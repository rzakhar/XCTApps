//
//  iOS.swift
//  XCTApps
//
//  Created by Roman Zakharov on 04/04/2020.
//

import XCTest

#if os(iOS)
@available(iOS 9.0, *)
public enum XCTApps: String {
    case activity = "com.apple.Fitness"
    case appleHeartStudy = "com.apple.Antimony"
    case appleMediaServices = "com.apple.AMSEngagementViewService"
    case appleStore = "com.apple.store.Jolly"
    case appleSupport = "com.apple.supportapp"
    case appleTvRemote = "com.apple.TVRemote"
    case appleTvRemoteUIService = "com.apple.TVRemoteUIService"
    case appleWatch = "com.apple.Bridge"
    case appSettings = "com.apple.AppSettings"
    case appSSOUIService = "com.apple.AppSSOUIService"
    case appStore = "com.apple.AppStore"
    case assistivetouch = "com.apple.assistivetouchd"
    case authenticationservicesui = "com.apple.AuthenticationServicesUI"
    case authkituiservice = "com.apple.AuthKitUIService"
    case axuiviewservice = "com.apple.AXUIViewService"
    case bluetoothuiservice = "com.apple.BluetoothUIService"
    case books = "com.apple.iBooks"
    case businesschatviewservice = "com.apple.BusinessChatViewService"
    case calculator = "com.apple.calculator"
    case calendar = "com.apple.mobilecal"
    case camera = "com.apple.camera"
    case carplaysplashscreen = "com.apple.CarPlaySplashScreen"
    case checkerboard = "com.apple.CheckerBoard"
    case classroom = "com.apple.classroom"
    case clips = "com.apple.clips"
    case clipviewservice = "com.apple.ClipViewService"
    case clock = "com.apple.mobiletimer"
    case cmpluginapp = "com.apple.CMPluginApp"
    case codeScanner = "com.apple.BarcodeScanner"
    case companionauthviewservice = "com.apple.CompanionAuthViewService"
    case compass = "com.apple.compass"
    case contactlessreaderuiservice = "com.apple.ContactlessUIService"
    case contacts = "com.apple.MobileAddressBook"
    case ctcarrierspaceauth = "com.apple.CTCarrierSpaceAuth"
    case ctnotifyuiservice = "com.apple.CTNotifyUIService"
    case demoApp = "com.apple.DemoApp"
    case deviceomatic = "com.apple.DeviceOMatic"
    case diagnostics = "com.apple.Diagnostics"
    case diagnosticsService = "com.apple.DiagnosticsService"
    case exposureNotificationRemoteViewService = "com.apple.PublicHealthRemoteUI"
    case exposureNotifications = "com.apple.HealthENLauncher"
    case faceTime = "com.apple.facetime"
    case askPermissionUI = "com.apple.AskPermissionUI"
    case family = "com.apple.family"
    case feedbackAssistant = "com.apple.appleseed.FeedbackAssistant"
    case fieldtest = "com.apple.fieldtest"
    case files = "com.apple.DocumentsApp"
    case findMy = "com.apple.findmy"
    case ftminternal4 = "com.apple.FTMInternal"
    case gameCenter = "com.apple.gamecenter"
    case gameCenterUiService = "com.apple.gamecenter.GameCenterUIService"
    case garageBand = "com.apple.mobilegarageband"
    case health = "com.apple.Health"
    case healthENBuddy = "com.apple.HealthENBuddy"
    case healthPrivacyService = "com.apple.HealthPrivacyService"
    case homeControlService = "com.apple.Home.HomeControlService"
    case homeUIService = "com.apple.Home.HomeUIService"
    case home = "com.apple.Home"
    case homepodSetup = "com.apple.HDSViewService"
    case iCloudDrive = "com.apple.iCloudDriveApp"
    case iMovie = "com.apple.iMovie"
    case inCallService = "com.apple.InCallService"
    case iTunesConnect = "com.apple.itunesconnect.mobile"
    case iTunesStore = "com.apple.MobileStore"
    case iTunesU = "com.apple.itunesu"
    case keynote = "com.apple.Keynote"
    case logicRemote = "com.apple.musicapps.remote"
    case magnifier = "com.apple.Magnifier"
    case mailCompositionService = "com.apple.MailCompositionService"
    case mail = "com.apple.mobilemail"
    case maps = "com.apple.Maps"
    case measure = "com.apple.measure"
    case messages = "com.apple.MobileSMS"
    case mtlreplayer = "com.apple.MTLReplayer"
    case music = "com.apple.Music"
    case musicMemos = "com.apple.musicmemos"
    case musicRecognition = "com.apple.musicrecognition"
    case musicuiservice = "com.apple.MusicUIService"
    case news = "com.apple.news"
    case notes = "com.apple.mobilenotes"
    case numbers = "com.apple.Numbers"
    case pages = "com.apple.Pages"
    case paperboard = "com.apple.PaperBoard"
    case passbooksecureuiservice = "com.apple.PassbookSecureUIService"
    case phone = "com.apple.mobilephone"
    case photoBooth = "com.apple.Photo-Booth"
    case photos = "com.apple.mobileslideshow"
    case playgrounds = "com.apple.Playgrounds"
    case podcasts = "com.apple.podcasts"
    case preboard = "com.apple.PreBoard"
    case printCenter = "com.apple.PrintKit.Print-Center"
    case proximityreaderuiservice = "com.apple.ProximityReaderUIService"
    case reminders = "com.apple.reminders"
    case remote = "com.apple.Remote"
    case remoteiCloudQuotaUI = "com.apple.RemoteiCloudQuotaUI"
    case remotePaymentPassActionsService = "com.apple.RemotePassUIService"
    case safari = "com.apple.mobilesafari"
    case safariViewService = "com.apple.SafariViewService"
    case screenSharingServer = "com.apple.screensharingserver"
    case carPlaySettings = "com.apple.CarPlaySettings"
    case settings = "com.apple.Preferences"
    case setup = "com.apple.SharingViewService"
    case shortcuts = "com.apple.shortcuts"
    case simSetupUIService = "com.apple.SIMSetupUIService"
    case siri = "com.apple.siri"
    case siriViewService = "com.apple.SiriViewService"
    case sleep = "com.apple.Health.Sleep"
    case spotlight = "com.apple.Spotlight"
    case springboard = "com.apple.springboard"
    case stocks = "com.apple.stocks"
    case subcredentialuiservice = "com.apple.SubcredentialUIService"
    case tips = "com.apple.tips"
    case trailers = "com.apple.movietrailers"
    case translate = "com.apple.Translate"
    case tvApp = "com.apple.tv"
    case userAuthentication = "com.apple.CoreAuthUI"
    case videos = "com.apple.videos"
    case voiceMemos = "com.apple.VoiceMemos"
    case voiceovertouch = "com.apple.VoiceOverTouch"
    case wallet = "com.apple.Passbook"
    case walletUIService = "com.apple.PassbookUIService"
    case weather = "com.apple.weather"
    case web = "com.apple.webapp"
    case wwdc = "com.apple.wwdc"

    public var app: XCUIApplication { return XCUIApplication(bundleIdentifier: rawValue) }
}
#endif
